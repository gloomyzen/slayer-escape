name: Linux

on:
  push:
    branches:
      - 'master'
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - '.gitignore'
  pull_request:
    branches:
      - 'master'
    paths-ignore:
      - 'docs/**'
      - '*.md'
      - '.gitignore'

jobs:

  build:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    name: Ubuntu 20.04
    runs-on: Ubuntu-20.04

    env:
      GIT: "https://github.com"
      MANUAL_CACHING: "6"
      AUTO_CACHING: "1"

    steps:
      - name: Get repository name.
        shell: bash
        run: echo "REPO_NAME=${GITHUB_REPOSITORY##*/}" >> $GITHUB_ENV

      - name: Clone. 🛎️
        uses: actions/checkout@v2
        with:
          submodules: recursive
          path: ${{ env.REPO_NAME }}

      - name: First set up. 🛠
        shell: bash
        run: |
          sudo apt-get update
          sudo add-apt-repository universe
          sudo apt-get update
          sudo apt-get install -y --fix-missing \
          build-essential clang git wget autoconf python2 g++ libgdk-pixbuf2.0-dev \
          libx11-dev libxmu-dev libglu1-mesa-dev libgl2ps-dev libxi-dev libzip-dev \
          libpng-dev libcurl4-gnutls-dev libfontconfig1-dev libsqlite3-dev libglew-dev \
          libssl-dev libgtk-3-dev libglfw3 libglfw3-dev xorg-dev cmake
          curl https://bootstrap.pypa.io/pip/2.7/get-pip.py --output get-pip.py
          sudo python2 get-pip.py
          pip2 --version

      - name: Clone engine. 🔨
        shell: bash
        run: |
          rm -rf external && mkdir external &&cd external
          git clone git@github.com:gloomyzen/engine-x.git engine-x
          echo "ENGINEX_PATH=$(pwd)/engine-x" >> $GITHUB_ENV
          echo "ENGINEX_CONSOLE_ROOT=$(pwd)/engine-x/tools/cocos2d-console/bin" >> $GITHUB_ENV


      - name: Build. 🔨
        shell: bash
        run: |
          ENGINEX_PATH=${{ env.ENGINEX_PATH }}
          ENGINEX_CONSOLE_ROOT=${{ env.ENGINEX_CONSOLE_ROOT }}
          rm -rf build
          mkdir build
          cd build
          cmake ../
          make -j 4
#          make test todo
